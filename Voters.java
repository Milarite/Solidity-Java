package Voting_App_Java-Solidity;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.5.0.
 */
public class Voters extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_GETNATIONALIDARRAYLENGTH = "getNationalIDArrayLength";

    public static final String FUNC_ADDVOTERDETAILS = "addVoterDetails";

    public static final String FUNC_DELETEVOTERDETAIL = "deleteVoterDetail";

    public static final String FUNC_GETVOTERCITY = "getVoterCity";

    public static final String FUNC_REVOKEMYVOTE = "revokeMyVote";

    public static final String FUNC_GETVOTERDATEOFBIRTH = "getVoterDateOfBirth";

    public static final String FUNC_CHECKIDANDPASSWORD = "checkIdAndPassword";

    public static final String FUNC_GETNUMBEROFVOTES = "getNumberOfVotes";

    public static final String FUNC_GETVOTEDCANDIDATESADDRESS = "getVotedCandidatesAddress";

    public static final String FUNC_GETVOTERYEAR = "getVoterYear";

    public static final String FUNC_ADDVOTERVOTES = "addVoterVotes";

    public static final String FUNC_GRANTYOURVOTE = "grantYourVote";

    public static final String FUNC_GETVOTERNAME = "getVoterName";

    public static final String FUNC_ADDVOTERINFO = "addVoterInfo";

    public static final String FUNC_CHECKNATIONALID = "checkNationalID";

    public static final String FUNC_SIGNUPVOTER = "signUpVoter";

    protected Voters(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Voters(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public RemoteCall<BigInteger> getNationalIDArrayLength(String voterAddress) {
        final Function function = new Function(FUNC_GETNATIONALIDARRAYLENGTH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(voterAddress)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> addVoterDetails(String _address, String voterIdNumber, String city, String year) {
        final Function function = new Function(
                FUNC_ADDVOTERDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address), 
                new org.web3j.abi.datatypes.Utf8String(voterIdNumber), 
                new org.web3j.abi.datatypes.Utf8String(city), 
                new org.web3j.abi.datatypes.Utf8String(year)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> deleteVoterDetail(String _address) {
        final Function function = new Function(
                FUNC_DELETEVOTERDETAIL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getVoterCity(String _address) {
        final Function function = new Function(FUNC_GETVOTERCITY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> revokeMyVote(String _voterAddress, String _candidateAddress) {
        final Function function = new Function(
                FUNC_REVOKEMYVOTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_voterAddress), 
                new org.web3j.abi.datatypes.Address(_candidateAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getVoterDateOfBirth(String _address) {
        final Function function = new Function(FUNC_GETVOTERDATEOFBIRTH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> checkIdAndPassword(String nationalID, String password) {
        final Function function = new Function(FUNC_CHECKIDANDPASSWORD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(nationalID), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> getNumberOfVotes(String _address) {
        final Function function = new Function(FUNC_GETNUMBEROFVOTES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> getVotedCandidatesAddress(String voterAddress, BigInteger idex) {
        final Function function = new Function(FUNC_GETVOTEDCANDIDATESADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(voterAddress), 
                new org.web3j.abi.datatypes.generated.Uint256(idex)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getVoterYear(String _address) {
        final Function function = new Function(FUNC_GETVOTERYEAR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> addVoterVotes(String voterAddress, String candidateAddress) {
        final Function function = new Function(FUNC_ADDVOTERVOTES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(voterAddress), 
                new org.web3j.abi.datatypes.Address(candidateAddress)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> grantYourVote(String voterAddress, String candidateAddress) {
        final Function function = new Function(
                FUNC_GRANTYOURVOTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(voterAddress), 
                new org.web3j.abi.datatypes.Address(candidateAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getVoterName(String _address) {
        final Function function = new Function(FUNC_GETVOTERNAME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> addVoterInfo(String _address, String voterIdNumber, String name, String birthOfDate, String password) {
        final Function function = new Function(
                FUNC_ADDVOTERINFO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address), 
                new org.web3j.abi.datatypes.Utf8String(voterIdNumber), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(birthOfDate), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> checkNationalID(String _address, String nationalID, String password, String name, String birthOfDate, String city, String year) {
        final Function function = new Function(FUNC_CHECKNATIONALID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address), 
                new org.web3j.abi.datatypes.Utf8String(nationalID), 
                new org.web3j.abi.datatypes.Utf8String(password), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(birthOfDate), 
                new org.web3j.abi.datatypes.Utf8String(city), 
                new org.web3j.abi.datatypes.Utf8String(year)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> signUpVoter(String _address, String nationalID, String password, String name, String birthOfDate, String city, String year) {
        final Function function = new Function(
                FUNC_SIGNUPVOTER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address), 
                new org.web3j.abi.datatypes.Utf8String(nationalID), 
                new org.web3j.abi.datatypes.Utf8String(password), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(birthOfDate), 
                new org.web3j.abi.datatypes.Utf8String(city), 
                new org.web3j.abi.datatypes.Utf8String(year)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public static RemoteCall<Voters> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Voters.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<Voters> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Voters.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static Voters load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Voters(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static Voters load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Voters(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }
}
