package Voting_App_Java-Solidity;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.5.0.
 */
public class Voters extends Contract {
    private static final String BINARY = "608060405234801561001057600080fd5b5061322f806100206000396000f300608060405260043610610149576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ca358821461014e57806312e9d09a146101b7578063172c6b5d146102b95780631a5e3f25146103105780631b605b861461039957806322853944146103c4578063256c0f27146104d957806334cc60cf1461051c578063439f5ac2146105d857806349059d94146106685780634918b34e146107245780634d37542c146108135780635ee1ae81146108405780636b15b84a14610897578063749222e31461092057806374c0854c146109e6578063755e8fc914610a4f57806378f305c614610b0b578063858cf8da14610b9b57806391b5ddd314610c59578063c22b6b9d14610cc2578063c828371e14610d7e578063cfb6338014610e0e578063d0e2ed8d14610e8f578063f8f30fc414610fea575b600080fd5b34801561015a57600080fd5b506101b5600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506111d1565b005b3480156101c357600080fd5b5061023e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506111eb565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561027e578082015181840152602081019050610263565b50505050905090810190601f1680156102ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102c557600080fd5b506102fa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611552565b6040518082815260200191505060405180910390f35b34801561031c57600080fd5b50610397600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061159e565b005b3480156103a557600080fd5b506103ae6118b5565b6040518082815260200191505060405180910390f35b3480156103d057600080fd5b506104d7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506118bf565b005b3480156104e557600080fd5b5061051a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119ee565b005b34801561052857600080fd5b5061055d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a92565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561059d578082015181840152602081019050610582565b50505050905090810190601f1680156105ca5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156105e457600080fd5b506105ed611b76565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561062d578082015181840152602081019050610612565b50505050905090810190601f16801561065a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561067457600080fd5b506106a9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c18565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106e95780820151818401526020810190506106ce565b50505050905090810190601f1680156107165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561073057600080fd5b506107d1600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611cfc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561081f57600080fd5b5061083e6004803603810190808035906020019092919050505061207c565b005b34801561084c57600080fd5b50610881600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612086565b6040518082815260200191505060405180910390f35b3480156108a357600080fd5b5061091e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506120d2565b005b34801561092c57600080fd5b5061096b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506127fd565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109ab578082015181840152602081019050610990565b50505050905090810190601f1680156109d85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156109f257600080fd5b50610a4d600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506128fd565b005b348015610a5b57600080fd5b50610a90600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612917565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ad0578082015181840152602081019050610ab5565b50505050905090810190601f168015610afd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610b1757600080fd5b50610b206129fb565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b60578082015181840152602081019050610b45565b50505050905090810190601f168015610b8d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610ba757600080fd5b50610c02600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050612a9d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610c45578082015181840152602081019050610c2a565b505050509050019250505060405180910390f35b348015610c6557600080fd5b50610cc0600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050612b64565b005b348015610cce57600080fd5b50610d03600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b7e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d43578082015181840152602081019050610d28565b50505050905090810190601f168015610d705780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610d8a57600080fd5b50610d93612c62565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610dd3578082015181840152602081019050610db8565b50505050905090810190601f168015610e005780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610e1a57600080fd5b50610e75600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050612d04565b604051808215151515815260200191505060405180910390f35b348015610e9b57600080fd5b50610fe8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050612d9e565b005b348015610ff657600080fd5b506111cf600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050612fca565b005b80600b90805190602001906111e7929190613096565b5050565b60606000806111f985612086565b915060095482101515611243576040805190810160405280601b81526020017f596f752072656163686564206e756d626572206f6620766f7465730000000000815250925061154a565b600090505b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905081101561151157836040516020018082805190602001908083835b6020831015156112cb57805182526020820191506020810190506020830392506112a6565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515611334578051825260208201915060208101905060208303925061130f565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156113b157fe5b906000526020600020906002020160010160405160200180828054600181600116156101000203166002900480156114205780601f106113fe576101008083540402835291820191611420565b820191906000526020600020905b81548152906001019060200180831161140c575b50509150506040516020818303038152906040526040518082805190602001908083835b6020831015156114695780518252602082019150602081019050602083039250611444565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916141561150457606060405190810160405280602a81526020017f596f7520616c726561647920766f74656420746f20746869732063616e64696481526020017f617465206265666f726500000000000000000000000000000000000000000000815250925061154a565b8080600101915050611248565b6040805190810160405280600481526020017f446f6e650000000000000000000000000000000000000000000000000000000081525092505b505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b81600073ffffffffffffffffffffffffffffffffffffffff16600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561163d57600080fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060408051908101604052808573ffffffffffffffffffffffffffffffffffffffff168152602001848152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190611735929190613116565b505050506001600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004015401600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055506007826040518082805190602001908083835b6020831015156117fd57805182526020820191506020810190506020830392506117d8565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902083604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140191505060405180910390209080600181540180825580915050906001820390600052602060002001600090919290919091509060001916905550505050565b6000600954905090565b60a0604051908101604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020016000815250600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906119a0929190613116565b5060408201518160020190805190602001906119bd929190613116565b5060608201518160030190805190602001906119da929190613116565b506080820151816004015590505050505050565b600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000611a659190613196565b600282016000611a759190613196565b600382016000611a859190613196565b6004820160009055505050565b6060600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b6a5780601f10611b3f57610100808354040283529160200191611b6a565b820191906000526020600020905b815481529060010190602001808311611b4d57829003601f168201915b50505050509050919050565b6060600c8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c0e5780601f10611be357610100808354040283529160200191611c0e565b820191906000526020600020905b815481529060010190602001808311611bf157829003601f168201915b5050505050905090565b6060600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cf05780601f10611cc557610100808354040283529160200191611cf0565b820191906000526020600020905b815481529060010190602001808311611cd357829003601f168201915b50505050509050919050565b6000816040516020018082805190602001908083835b602083101515611d375780518252602082019150602081019050602083039250611d12565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515611da05780518252602082019150602081019050602083039250611d7b565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916600460006002866040518082805190602001908083835b602083101515611e0d5780518252602082019150602081019050602083039250611de8565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016040516020018082805460018160011615610100020316600290048015611efc5780601f10611eda576101008083540402835291820191611efc565b820191906000526020600020905b815481529060010190602001808311611ee8575b50509150506040516020818303038152906040526040518082805190602001908083835b602083101515611f455780518252602082019150602081019050602083039250611f20565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916141561207157600460006002856040518082805190602001908083835b602083101515611fb85780518252602082019150602081019050602083039250611f93565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050612076565b600290505b92915050565b8060098190555050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401549050919050565b60008083600073ffffffffffffffffffffffffffffffffffffffff16600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561217457600080fd5b600092505b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508310156127f657836040516020018082805190602001908083835b6020831015156121fc57805182526020820191506020810190506020830392506121d7565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156122655780518252602082019150602081019050602083039250612240565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811015156122e257fe5b906000526020600020906002020160010160405160200180828054600181600116156101000203166002900480156123515780601f1061232f576101008083540402835291820191612351565b820191906000526020600020905b81548152906001019060200180831161233d575b50509150506040516020818303038152906040526040518082805190602001908083835b60208310151561239a5780518252602082019150602081019050602083039250612375565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191614156127e957600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561241d57fe5b9060005260206000209060020201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006124639190613196565b50506001600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004015403600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040181905550600091505b6007846040518082805190602001908083835b60208310151561252e5780518252602082019150602081019050602083039250612509565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020805490508210156127e45784604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019150506040516020818303038152906040526040518082805190602001908083835b6020831015156125fc57805182526020820191506020810190506020830392506125d7565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019166007856040518082805190602001908083835b6020831015156126655780518252602082019150602081019050602083039250612640565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020838154811015156126a557fe5b90600052602060002001546040516020018082600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b60208310151561270c57805182526020820191506020810190506020830392506126e7565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191614156127d75760006001026007856040518082805190602001908083835b602083101515612780578051825260208201915060208101905060208303925061275b565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020838154811015156127c057fe5b9060005260206000200181600019169055506127e4565b81806001019250506124f6565b6127f6565b8280600101935050612179565b5050505050565b6060600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561284b57fe5b90600052602060002090600202016001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128f05780601f106128c5576101008083540402835291602001916128f0565b820191906000526020600020905b8154815290600101906020018083116128d357829003601f168201915b5050505050905092915050565b80600a9080519060200190612913929190613096565b5050565b6060600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156129ef5780601f106129c4576101008083540402835291602001916129ef565b820191906000526020600020905b8154815290600101906020018083116129d257829003601f168201915b50505050509050919050565b6060600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a935780601f10612a6857610100808354040283529160200191612a93565b820191906000526020600020905b815481529060010190602001808311612a7657829003601f168201915b5050505050905090565b60606007826040518082805190602001908083835b602083101515612ad75780518252602082019150602081019050602083039250612ab2565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020805480602002602001604051908101604052809291908181526020018280548015612b5857602002820191906000526020600020905b81546000191681526020019060010190808311612b40575b50505050509050919050565b80600c9080519060200190612b7a929190613096565b5050565b6060600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612c565780601f10612c2b57610100808354040283529160200191612c56565b820191906000526020600020905b815481529060010190602001808311612c3957829003601f168201915b50505050509050919050565b6060600b8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612cfa5780601f10612ccf57610100808354040283529160200191612cfa565b820191906000526020600020905b815481529060010190602001808311612cdd57829003601f168201915b5050505050905090565b6000600115156003836040518082805190602001908083835b602083101515612d425780518252602082019150602081019050602083039250612d1d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff1615151415612d945760019050612d99565b600090505b919050565b60088590806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060a0604051908101604052808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200182815250600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190612ee4929190613116565b506040820151816002019080519060200190612f01929190613116565b506060820151816003019080519060200190612f1e929190613116565b506080820151816004019080519060200190612f3b929190613116565b5090505060016003856040518082805190602001908083835b602083101515612f795780518252602082019150602081019050602083039250612f54565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff0219169083151502179055505050505050565b612fd78787868689612d9e565b612fe3878784846118bf565b866002876040518082805190602001908083835b60208310151561301c5780518252602082019150602081019050602083039250612ff7565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106130d757805160ff1916838001178555613105565b82800160010185558215613105579182015b828111156131045782518255916020019190600101906130e9565b5b50905061311291906131de565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061315757805160ff1916838001178555613185565b82800160010185558215613185579182015b82811115613184578251825591602001919060010190613169565b5b50905061319291906131de565b5090565b50805460018160011615610100020316600290046000825580601f106131bc57506131db565b601f0160209004906000526020600020908101906131da91906131de565b5b50565b61320091905b808211156131fc5760008160009055506001016131e4565b5090565b905600a165627a7a72305820de47e9e5f6a813631cddc548e5aafbfc81eece019ca8e17e09f2daae5f4a9c950029";

    public static final String FUNC_SETSTARTTIME = "setStartTime";

    public static final String FUNC_ADDVOTERVOTES = "addVoterVotes";

    public static final String FUNC_GETNATIONALIDARRAYLENGTH = "getNationalIDArrayLength";

    public static final String FUNC_GRANTYOURVOTE = "grantYourVote";

    public static final String FUNC_GETVOTESCOUNT = "getVotesCount";

    public static final String FUNC_ADDVOTERDETAILS = "addVoterDetails";

    public static final String FUNC_DELETEVOTERDETAIL = "deleteVoterDetail";

    public static final String FUNC_GETVOTERCITY = "getVoterCity";

    public static final String FUNC_GETENDTIME = "getEndTime";

    public static final String FUNC_GETVOTERDATEOFBIRTH = "getVoterDateOfBirth";

    public static final String FUNC_CHECKIDANDPASSWORD = "checkIdAndPassword";

    public static final String FUNC_UPDATEVOTESCOUNT = "updateVotesCount";

    public static final String FUNC_GETNUMBEROFVOTES = "getNumberOfVotes";

    public static final String FUNC_REVOKEMYVOTE = "revokeMyVote";

    public static final String FUNC_GETVOTEDCANDIDATESADDRESS = "getVotedCandidatesAddress";

    public static final String FUNC_SETSTARTDATE = "setStartDate";

    public static final String FUNC_GETVOTERYEAR = "getVoterYear";

    public static final String FUNC_GETSTARTDATE = "getStartDate";

    public static final String FUNC_GETCANDIDATEVOTERS = "getCandidateVoters";

    public static final String FUNC_SETENDTIME = "setEndTime";

    public static final String FUNC_GETVOTERNAME = "getVoterName";

    public static final String FUNC_GETSTARTTIME = "getStartTime";

    public static final String FUNC_CHECKNATIONALID = "checkNationalID";

    public static final String FUNC_ADDVOTERINFO = "addVoterInfo";

    public static final String FUNC_SIGNUPVOTER = "signUpVoter";

    protected Voters(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Voters(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public RemoteCall<TransactionReceipt> setStartTime(String _startTime) {
        final Function function = new Function(
                FUNC_SETSTARTTIME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_startTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> addVoterVotes(String voterAddress, String _nationalId) {
        final Function function = new Function(FUNC_ADDVOTERVOTES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(voterAddress), 
                new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> getNationalIDArrayLength(String voterAddress) {
        final Function function = new Function(FUNC_GETNATIONALIDARRAYLENGTH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(voterAddress)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> grantYourVote(String voterAddress, String _candidateNationalId) {
        final Function function = new Function(
                FUNC_GRANTYOURVOTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(voterAddress), 
                new org.web3j.abi.datatypes.Utf8String(_candidateNationalId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getVotesCount() {
        final Function function = new Function(FUNC_GETVOTESCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> addVoterDetails(String _address, String voterIdNumber, String city, String year) {
        final Function function = new Function(
                FUNC_ADDVOTERDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address), 
                new org.web3j.abi.datatypes.Utf8String(voterIdNumber), 
                new org.web3j.abi.datatypes.Utf8String(city), 
                new org.web3j.abi.datatypes.Utf8String(year)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> deleteVoterDetail(String _address) {
        final Function function = new Function(
                FUNC_DELETEVOTERDETAIL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getVoterCity(String _address) {
        final Function function = new Function(FUNC_GETVOTERCITY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getEndTime() {
        final Function function = new Function(FUNC_GETENDTIME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getVoterDateOfBirth(String _address) {
        final Function function = new Function(FUNC_GETVOTERDATEOFBIRTH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> checkIdAndPassword(String nationalID, String password) {
        final Function function = new Function(FUNC_CHECKIDANDPASSWORD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(nationalID), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> updateVotesCount(BigInteger _votesCount) {
        final Function function = new Function(
                FUNC_UPDATEVOTESCOUNT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_votesCount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getNumberOfVotes(String _address) {
        final Function function = new Function(FUNC_GETNUMBEROFVOTES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> revokeMyVote(String _voterAddress, String _nationalId) {
        final Function function = new Function(
                FUNC_REVOKEMYVOTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_voterAddress), 
                new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getVotedCandidatesAddress(String voterAddress, BigInteger idex) {
        final Function function = new Function(FUNC_GETVOTEDCANDIDATESADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(voterAddress), 
                new org.web3j.abi.datatypes.generated.Uint256(idex)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> setStartDate(String _startDate) {
        final Function function = new Function(
                FUNC_SETSTARTDATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_startDate)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getVoterYear(String _address) {
        final Function function = new Function(FUNC_GETVOTERYEAR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getStartDate() {
        final Function function = new Function(FUNC_GETSTARTDATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<List> getCandidateVoters(String _candidateNationalId) {
        final Function function = new Function(FUNC_GETCANDIDATEVOTERS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_candidateNationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Bytes32>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<TransactionReceipt> setEndTime(String _endTime) {
        final Function function = new Function(
                FUNC_SETENDTIME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_endTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getVoterName(String _address) {
        final Function function = new Function(FUNC_GETVOTERNAME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getStartTime() {
        final Function function = new Function(FUNC_GETSTARTTIME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<Boolean> checkNationalID(String nationalID) {
        final Function function = new Function(FUNC_CHECKNATIONALID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(nationalID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> addVoterInfo(String _address, String voterIdNumber, String name, String birthOfDate, String password) {
        final Function function = new Function(
                FUNC_ADDVOTERINFO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address), 
                new org.web3j.abi.datatypes.Utf8String(voterIdNumber), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(birthOfDate), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> signUpVoter(String _address, String nationalID, String password, String name, String birthOfDate, String city, String year) {
        final Function function = new Function(
                FUNC_SIGNUPVOTER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address), 
                new org.web3j.abi.datatypes.Utf8String(nationalID), 
                new org.web3j.abi.datatypes.Utf8String(password), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(birthOfDate), 
                new org.web3j.abi.datatypes.Utf8String(city), 
                new org.web3j.abi.datatypes.Utf8String(year)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public static RemoteCall<Voters> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Voters.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<Voters> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Voters.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static Voters load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Voters(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static Voters load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Voters(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }
}
