package Voting_App_Java-Solidity;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.5.0.
 */
public class Candidates extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_GETCANDIDATETXTHASHSTATUSLENGTH = "getCandidateTxtHashStatusLength";

    public static final String FUNC_ADDCANDIDATE = "addCandidate";

    public static final String FUNC_CHECKIDANDPASSWORD = "checkIdAndPassword";

    public static final String FUNC_GETCANDIDATENATIONALID = "getCandidateNationalId";

    public static final String FUNC_GETCANDIDATEADDRESSBYNATIONALID = "getCandidateAddressByNationalId";

    public static final String FUNC_GETTXTHASH = "getTxtHash";

    public static final String FUNC_GETTXTHASHFLAG = "getTxtHashFlag";

    public static final String FUNC_GETCANDIDATEPHONENUMBER = "getCandidatePhonenumber";

    public static final String FUNC_GETCANDIDATEVOTESNUMBER = "getCandidateVotesNumber";

    public static final String FUNC_DELETECANDIDATE = "deleteCandidate";

    public static final String FUNC_GETNATIONALID = "getNationalID";

    public static final String FUNC_GETCANDIDATECAMPAIGN = "getCandidateCampaign";

    public static final String FUNC_ADDCANDIDATEDETAILS = "addCandidateDetails";

    public static final String FUNC_GETNATIONALIDARRAYLENGTH = "getNationalIDArrayLength";

    public static final String FUNC_GETCANDIDATENAME = "getCandidateName";

    public static final String FUNC_GETCANDIDATEYEAR = "getCandidateYear";

    public static final String FUNC_ADDTXTHASHTOCANDIDATE = "addTxtHashToCandidate";

    public static final String FUNC_GETCANDIDATECITY = "getCandidateCity";

    public static final String FUNC_GETCANDIDATEPASSWORD = "getCandidatePassword";

    public static final String FUNC_REMOVETXTHASHTOCANDIDATE = "removeTxtHashToCandidate";

    public static final String FUNC_ADDCANDIDATETRACKING = "addCandidateTracking";

    public static final String FUNC_GETCANDIDATEBIRTHOFDATE = "getCandidatebirthOfDate";

    protected Candidates(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Candidates(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public RemoteCall<BigInteger> getCandidateTxtHashStatusLength(String candidateIdNumber) {
        final Function function = new Function(FUNC_GETCANDIDATETXTHASHSTATUSLENGTH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(candidateIdNumber)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> addCandidate(String candidateIdNumber, String name, String birthOfDate, String password) {
        final Function function = new Function(
                FUNC_ADDCANDIDATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(candidateIdNumber), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(birthOfDate), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> checkIdAndPassword(String _nationalId, String password) {
        final Function function = new Function(FUNC_CHECKIDANDPASSWORD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<String> getCandidateNationalId(String _nationalId) {
        final Function function = new Function(FUNC_GETCANDIDATENATIONALID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<Boolean> getCandidateAddressByNationalId(String nationalId) {
        final Function function = new Function(FUNC_GETCANDIDATEADDRESSBYNATIONALID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<String> getTxtHash(String nationalId, BigInteger index) {
        final Function function = new Function(FUNC_GETTXTHASH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(nationalId), 
                new org.web3j.abi.datatypes.generated.Uint256(index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> getTxtHashFlag(String nationalId, BigInteger index) {
        final Function function = new Function(FUNC_GETTXTHASHFLAG, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(nationalId), 
                new org.web3j.abi.datatypes.generated.Uint256(index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> getCandidatePhonenumber(String _nationalId) {
        final Function function = new Function(FUNC_GETCANDIDATEPHONENUMBER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> getCandidateVotesNumber(String _nationalId) {
        final Function function = new Function(FUNC_GETCANDIDATEVOTESNUMBER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> deleteCandidate(String _nationalId) {
        final Function function = new Function(
                FUNC_DELETECANDIDATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getNationalID(BigInteger index) {
        final Function function = new Function(FUNC_GETNATIONALID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getCandidateCampaign(String _nationalId) {
        final Function function = new Function(FUNC_GETCANDIDATECAMPAIGN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> addCandidateDetails(String candidateIdNumber, String city, String year, String phoneNumber, String campaign) {
        final Function function = new Function(
                FUNC_ADDCANDIDATEDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(candidateIdNumber), 
                new org.web3j.abi.datatypes.Utf8String(city), 
                new org.web3j.abi.datatypes.Utf8String(year), 
                new org.web3j.abi.datatypes.Utf8String(phoneNumber), 
                new org.web3j.abi.datatypes.Utf8String(campaign)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getNationalIDArrayLength() {
        final Function function = new Function(FUNC_GETNATIONALIDARRAYLENGTH, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> getCandidateName(String _nationalId) {
        final Function function = new Function(FUNC_GETCANDIDATENAME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getCandidateYear(String _nationalId) {
        final Function function = new Function(FUNC_GETCANDIDATEYEAR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> addTxtHashToCandidate(String nationalIdCandidate, String txtHash) {
        final Function function = new Function(
                FUNC_ADDTXTHASHTOCANDIDATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(nationalIdCandidate), 
                new org.web3j.abi.datatypes.Utf8String(txtHash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getCandidateCity(String _nationalId) {
        final Function function = new Function(FUNC_GETCANDIDATECITY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getCandidatePassword(String _nationalId) {
        final Function function = new Function(FUNC_GETCANDIDATEPASSWORD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> removeTxtHashToCandidate(String nationalIdCandidate, String txtHash) {
        final Function function = new Function(
                FUNC_REMOVETXTHASHTOCANDIDATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(nationalIdCandidate), 
                new org.web3j.abi.datatypes.Utf8String(txtHash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> addCandidateTracking(String _nationalId, BigInteger numberOfVotes) {
        final Function function = new Function(
                FUNC_ADDCANDIDATETRACKING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId), 
                new org.web3j.abi.datatypes.generated.Uint256(numberOfVotes)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getCandidatebirthOfDate(String _nationalId) {
        final Function function = new Function(FUNC_GETCANDIDATEBIRTHOFDATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public static RemoteCall<Candidates> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Candidates.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<Candidates> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Candidates.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static Candidates load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Candidates(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static Candidates load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Candidates(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }
}
