package Voting_App_Java-Solidity;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.5.0.
 */
public class MainContract extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_SETSTARTTIME = "setStartTime";

    public static final String FUNC_ADDCANDIDATE = "addCandidate";

    public static final String FUNC_GETNATIONALIDARRAYLENGTH = "getNationalIDArrayLength";

    public static final String FUNC_GRANTYOURVOTE = "grantYourVote";

    public static final String FUNC_GETVOTESCOUNT = "getVotesCount";

    public static final String FUNC_DELETEVOTERDETAIL = "deleteVoterDetail";

    public static final String FUNC_GETVOTERCITY = "getVoterCity";

    public static final String FUNC_GETENDTIME = "getEndTime";

    public static final String FUNC_GETVOTERDATEOFBIRTH = "getVoterDateOfBirth";

    public static final String FUNC_CHECKIFVOTED = "checkIfVoted";

    public static final String FUNC_UPDATEVOTESCOUNT = "updateVotesCount";

    public static final String FUNC_GETNUMBEROFVOTES = "getNumberOfVotes";

    public static final String FUNC_GETCANDIDATEADDRESSBYNATIONALID = "getCandidateAddressByNationalId";

    public static final String FUNC_REVOKEMYVOTE = "revokeMyVote";

    public static final String FUNC_GETVOTEDCANDIDATESADDRESS = "getVotedCandidatesAddress";

    public static final String FUNC_SETSTARTDATE = "setStartDate";

    public static final String FUNC_GETVOTERYEAR = "getVoterYear";

    public static final String FUNC_GETSTARTDATE = "getStartDate";

    public static final String FUNC_GETCANDIDATEPHONENUMBER = "getCandidatePhonenumber";

    public static final String FUNC_GETCANDIDATEVOTESNUMBER = "getCandidateVotesNumber";

    public static final String FUNC_GETCANDIDATENATIONAL = "getCandidateNational";

    public static final String FUNC_GETCANDIDATEVOTERS = "getCandidateVoters";

    public static final String FUNC_DELETECANDIDATE = "deleteCandidate";

    public static final String FUNC_GETCANDIDATENATIONALID = "getCandidateNationalID";

    public static final String FUNC_SETENDTIME = "setEndTime";

    public static final String FUNC_GETCANDIDATECAMPAIGN = "getCandidateCampaign";

    public static final String FUNC_ADDCANDIDATEDETAILS = "addCandidateDetails";

    public static final String FUNC_GETCANDIDATENAME = "getCandidateName";

    public static final String FUNC_GETCANDIDATEYEAR = "getCandidateYear";

    public static final String FUNC_GETCANDIDATECITY = "getCandidateCity";

    public static final String FUNC_SENDETHER = "sendEther";

    public static final String FUNC_GETVOTERNAME = "getVoterName";

    public static final String FUNC_GETSTARTTIME = "getStartTime";

    public static final String FUNC_CANDIDATECHECKIDANDPASSWORD = "CandidateCheckIdAndPassword";

    public static final String FUNC_ADDJUDGMENTINFORMATION = "addJudgmentInformation";

    public static final String FUNC_ADDCANDIDATETRACKING = "addCandidateTracking";

    public static final String FUNC_GETCANDIDATENATIONALIDARRAYLENGTH = "getCandidateNationalIDArrayLength";

    public static final String FUNC_CHECKNATIONALIDVOTER = "checkNationalIDVoter";

    public static final String FUNC_CHECKIDANDPASSWORDVOTER = "checkIdAndPasswordVoter";

    public static final String FUNC_SIGNUPVOTER = "signUpVoter";

    public static final String FUNC_GETCANDIDATEBIRTHOFDATE = "getCandidatebirthOfDate";

    protected MainContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected MainContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public RemoteCall<TransactionReceipt> setStartTime(String _startTime) {
        final Function function = new Function(
                FUNC_SETSTARTTIME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_startTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> addCandidate(String candidateIdNumber, String name, String birthOfDate, String password, String city, String year, String phoneNumber, String campaign) {
        final Function function = new Function(
                FUNC_ADDCANDIDATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(candidateIdNumber), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(birthOfDate), 
                new org.web3j.abi.datatypes.Utf8String(password), 
                new org.web3j.abi.datatypes.Utf8String(city), 
                new org.web3j.abi.datatypes.Utf8String(year), 
                new org.web3j.abi.datatypes.Utf8String(phoneNumber), 
                new org.web3j.abi.datatypes.Utf8String(campaign)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getNationalIDArrayLength(String voterAddress) {
        final Function function = new Function(FUNC_GETNATIONALIDARRAYLENGTH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(voterAddress)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> grantYourVote(String _voterAddress, String _candidateNationalId) {
        final Function function = new Function(
                FUNC_GRANTYOURVOTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_voterAddress), 
                new org.web3j.abi.datatypes.Utf8String(_candidateNationalId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getVotesCount() {
        final Function function = new Function(FUNC_GETVOTESCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> deleteVoterDetail(String _address) {
        final Function function = new Function(
                FUNC_DELETEVOTERDETAIL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getVoterCity(String _address) {
        final Function function = new Function(FUNC_GETVOTERCITY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getEndTime() {
        final Function function = new Function(FUNC_GETENDTIME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getVoterDateOfBirth(String _address) {
        final Function function = new Function(FUNC_GETVOTERDATEOFBIRTH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> checkIfVoted(String voterAddress, String _candidateNationalId) {
        final Function function = new Function(FUNC_CHECKIFVOTED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(voterAddress), 
                new org.web3j.abi.datatypes.Utf8String(_candidateNationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> updateVotesCount(BigInteger _votesCount) {
        final Function function = new Function(
                FUNC_UPDATEVOTESCOUNT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_votesCount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getNumberOfVotes(String _address) {
        final Function function = new Function(FUNC_GETNUMBEROFVOTES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Boolean> getCandidateAddressByNationalId(String nationalId) {
        final Function function = new Function(FUNC_GETCANDIDATEADDRESSBYNATIONALID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> revokeMyVote(String _voterAddress, String _candidateNationalId) {
        final Function function = new Function(
                FUNC_REVOKEMYVOTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_voterAddress), 
                new org.web3j.abi.datatypes.Utf8String(_candidateNationalId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getVotedCandidatesAddress(String voterAddress, BigInteger index) {
        final Function function = new Function(FUNC_GETVOTEDCANDIDATESADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(voterAddress), 
                new org.web3j.abi.datatypes.generated.Uint256(index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> setStartDate(String _startDate) {
        final Function function = new Function(
                FUNC_SETSTARTDATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_startDate)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getVoterYear(String _address) {
        final Function function = new Function(FUNC_GETVOTERYEAR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getStartDate() {
        final Function function = new Function(FUNC_GETSTARTDATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getCandidatePhonenumber(String _nationalId) {
        final Function function = new Function(FUNC_GETCANDIDATEPHONENUMBER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> getCandidateVotesNumber(String _nationalId) {
        final Function function = new Function(FUNC_GETCANDIDATEVOTESNUMBER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> getCandidateNational(String _candidateNationalId) {
        final Function function = new Function(FUNC_GETCANDIDATENATIONAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_candidateNationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<List> getCandidateVoters(String _candidateNationalId) {
        final Function function = new Function(FUNC_GETCANDIDATEVOTERS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_candidateNationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Bytes32>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<TransactionReceipt> deleteCandidate(String _nationalId) {
        final Function function = new Function(
                FUNC_DELETECANDIDATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getCandidateNationalID(BigInteger index) {
        final Function function = new Function(FUNC_GETCANDIDATENATIONALID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> setEndTime(String _endTime) {
        final Function function = new Function(
                FUNC_SETENDTIME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_endTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getCandidateCampaign(String _nationalId) {
        final Function function = new Function(FUNC_GETCANDIDATECAMPAIGN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> addCandidateDetails(String candidateIdNumber, String city, String year, String phoneNumber, String campaign) {
        final Function function = new Function(
                FUNC_ADDCANDIDATEDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(candidateIdNumber), 
                new org.web3j.abi.datatypes.Utf8String(city), 
                new org.web3j.abi.datatypes.Utf8String(year), 
                new org.web3j.abi.datatypes.Utf8String(phoneNumber), 
                new org.web3j.abi.datatypes.Utf8String(campaign)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getCandidateName(String _nationalId) {
        final Function function = new Function(FUNC_GETCANDIDATENAME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getCandidateYear(String _nationalId) {
        final Function function = new Function(FUNC_GETCANDIDATEYEAR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getCandidateCity(String _nationalId) {
        final Function function = new Function(FUNC_GETCANDIDATECITY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> sendEther(String _address, BigInteger _balance, BigInteger weiValue) {
        final Function function = new Function(
                FUNC_SENDETHER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address), 
                new org.web3j.abi.datatypes.generated.Uint256(_balance)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteCall<String> getVoterName(String _address) {
        final Function function = new Function(FUNC_GETVOTERNAME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getStartTime() {
        final Function function = new Function(FUNC_GETSTARTTIME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<Boolean> CandidateCheckIdAndPassword(String _candidateIdNumber, String password) {
        final Function function = new Function(FUNC_CANDIDATECHECKIDANDPASSWORD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_candidateIdNumber), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> addJudgmentInformation(String _address, String judgmentInformationId, String name, String birthOfDate, String password) {
        final Function function = new Function(
                FUNC_ADDJUDGMENTINFORMATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address), 
                new org.web3j.abi.datatypes.Utf8String(judgmentInformationId), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(birthOfDate), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> addCandidateTracking(String _nationalId, BigInteger numberOfVotes) {
        final Function function = new Function(
                FUNC_ADDCANDIDATETRACKING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId), 
                new org.web3j.abi.datatypes.generated.Uint256(numberOfVotes)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getCandidateNationalIDArrayLength() {
        final Function function = new Function(FUNC_GETCANDIDATENATIONALIDARRAYLENGTH, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Boolean> checkNationalIDVoter(String nationalID) {
        final Function function = new Function(FUNC_CHECKNATIONALIDVOTER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(nationalID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<String> checkIdAndPasswordVoter(String nationalID, String password) {
        final Function function = new Function(FUNC_CHECKIDANDPASSWORDVOTER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(nationalID), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> signUpVoter(String _address, String nationalID, String password, String name, String birthOfDate, String city, String year) {
        final Function function = new Function(
                FUNC_SIGNUPVOTER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address), 
                new org.web3j.abi.datatypes.Utf8String(nationalID), 
                new org.web3j.abi.datatypes.Utf8String(password), 
                new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(birthOfDate), 
                new org.web3j.abi.datatypes.Utf8String(city), 
                new org.web3j.abi.datatypes.Utf8String(year)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getCandidatebirthOfDate(String _nationalId) {
        final Function function = new Function(FUNC_GETCANDIDATEBIRTHOFDATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_nationalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public static RemoteCall<MainContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _candidate, String _voters, String _judgment) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_candidate), 
                new org.web3j.abi.datatypes.Address(_voters), 
                new org.web3j.abi.datatypes.Address(_judgment)));
        return deployRemoteCall(MainContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static RemoteCall<MainContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _candidate, String _voters, String _judgment) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_candidate), 
                new org.web3j.abi.datatypes.Address(_voters), 
                new org.web3j.abi.datatypes.Address(_judgment)));
        return deployRemoteCall(MainContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static MainContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new MainContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static MainContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new MainContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }
}
